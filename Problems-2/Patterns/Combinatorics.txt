
ll mod = 1e9 + 7;
ll binExpo(ll x, ll n){
    ll ans = 1;
    while(n > 0){
        if(n & 1) ans = (ans * x) % mod;
        x = (x * x) % mod;
        n >>= 1;
    }
    return ans % mod;
}

ll ncr(ll n, ll r , vector<ll> & fact, vector<ll> & ifact){
    return (((fact[n] * ifact[n-r]) % mod) * ifact[r]) % mod;
}

void solve(){
    int n, m;
    cin >> n >> m;
    vector<ll> fact (n + m + 1);
    vector<ll> ifact (n + m + 1);
    fact[0] = 1;
    ifact[0] = 1;
    for(int i = 1 ; i <= n + m; i++){
        fact[i] = (i * fact[i-1]) % mod;
    }
    ifact[n + m] = binExpo(fact[n + m], mod - 2);
    for(int i = n + m - 1; i >= 1; i--){
        ifact[i] = ((i + 1) * ifact[i+1]) % mod;
    }
    
    cout << ncr(m + n - 1, n - 1, fact, ifact) << endl;

    

}
